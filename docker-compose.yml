version: '3.8'

services:
  # Weather service
  weather-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: weather-service-dev
    ports:
      - '9001:9001'
    environment:
      - NODE_ENV=development
      - SERVICE_PORT=9001
      # Override specific values for Docker environment
      - SERVICE_HOST=0.0.0.0
      - MONGODB_CONNECTION=mongodb://admin:password@mongodb:27017/WeatherReporter?authSource=admin
      - MONGODB_USE_CERT_AUTH=false
      - CACHE_STRATEGY=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - weather-network
    restart: unless-stopped

  # MongoDB database
  mongodb:
    image: mongo:7-jammy
    container_name: weather-mongodb
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=weather-reporter
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - weather-network
    restart: unless-stopped

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: weather-redis
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-development}
    volumes:
      - redis_data:/data
    networks:
      - weather-network
    restart: unless-stopped

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: weather-redis-commander
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-development}
    depends_on:
      - redis
    networks:
      - weather-network
    restart: unless-stopped

  # MongoDB Express (MongoDB GUI)
  mongo-express:
    image: mongo-express:latest
    container_name: weather-mongo-express
    ports:
      - '8082:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - weather-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  weather-network:
    driver: bridge
